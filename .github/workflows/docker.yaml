name: Docker Build and Publish

on:
#   workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Get version from package.json
      id: get_version
      run: echo "::set-output name=version::$(node -p -e "require('./package.json').version")"

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ymazurau/project:${{ steps.get_version.outputs.version }}

    - name: Checkout values.yaml
      uses: actions/checkout@v2
      with:
        repository: YMazurau/ProjectHelm
        path: .

    - name: Update values.yaml
      run: |
        sed -i 's/tag:.*/tag: ${{ steps.get_version.outputs.version }}/g' ./project/values.yaml

    # - name: Commit and push changes to values.yaml
    #   run: |
    #     export GH_TOKEN=${{ secrets.PROJECT_TOKEN }}
    #     cd /home/runner/work/project/project/project/
    #     git config --global user.email "mazurovsasha@gmail.com"
    #     git config --global user.name "Alexsandr Mazurov"
    #     git branch -m master
    #     git add .
    #     git commit -m "Update values.yaml v${{ steps.get_version.outputs.version }}"
    #     git remote add helm-origin https://${{ secrets.PROJECT_TOKEN }}@github.com/Mazurovsasha/project-helm.git
    #     # git push --force --set-upstream helm-origin master "${GH_TOKEN}"
    #     git push -u helm-origin master
  # slackNotification:
  #   name: Slack Notification
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: 'incoming-webhooks'
        SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      with:
       status: ${{ job.status }}
